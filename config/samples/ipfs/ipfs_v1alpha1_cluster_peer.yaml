apiVersion: ipfs.kotal.io/v1alpha1
kind: ClusterPeer
metadata:
  name: cluster-peer
spec:
  # the follwing <id> and <privatekey> has been created using ipfs-key utility
  # https://github.com/whyrusleeping/ipfs-key
  # ipfs-key -type ed25519 | base64
  id: "12D3KooWBcEtY8GH4mNkri9kM3haeWhEXtQV7mi81ErWrqLYGuiq"
  # WARNING: DON'T use the following private key in production
  # KEY=CAESQOH/DvUJmeJ9z6m3wAStpkrlBwJQxIyNSK0YGf0EI5ZRGpwsWxl4wmgReqmHl8LQjTC2iPM0QbYAjeY3Z63AFnI=
  # kubectl create secret generic my-cluster-privatekey --from-literal=key=$KEY
  privateKeySecretName: my-cluster-privatekey
  consensus: crdt
  trustedPeers:
    - 12D3KooWBcEtY8GH4mNkri9kM3haeWhEXtQV7mi81ErWrqLYGuiq
    - 12D3KooWQ9yZnqowEDme3gSgS45KY9ZoEmAiGYRxusdEaqtFa9pr
  # can be obtained by deploying bare-peer sample
  # kubectl apply -f ipfs_v1alpha1_bare_peer.yaml
  peerEndpoint: /dns4/bare-peer/tcp/5001
  # WARNING: DON'T use the following cluster secret in production
  # CLUSTER_SECRET=$(openssl rand -hex 32)
  # kubectl create secret generic cluster-secret --from-literal=secret=$CLUSTER_SECRET
  clusterSecretName: cluster-secret
  logging: info
  resources:
    cpu: "1"
    memory: "1Gi"
